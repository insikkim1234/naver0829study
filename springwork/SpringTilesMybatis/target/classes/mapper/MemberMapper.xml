<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="mini.dao.MemberDao">
<!-- (15)membermapper.xml에서 id="totalCountOfMember"작성해서 memberdb의 총 갯수를 얻어내는 sql쿼리 -->
	<select id="totalCountOfMember" resultType="int">
		select count(*)
		from memberdb
	</select>
<!-- (28)MemberMapper에 id="insertMember" 부분의 삽입하는 sql쿼리 작성 -->	
	<insert id="insertMember" parameterType="MemberDto">
		insert into memberdb (name,myid,pass,photo,hp,email,gaipday)
		values (#{name},#{myid},#{pass},#{photo},#{hp},#{email},now())
	</insert>
<!-- (30)MemberMapper에 id="selectAllMembers" 부분의 원하는 내용 찾는 쿼리 작성
(파라미터를 맵으로 받음) -->	
	<select id="selectAllMembers" resultType="MemberDto" parameterType="Map">
		select *
		from memberdb
		<if test="searchword!=null">
		where ${searchfield}
		like concat('%',#{searchword},'%')
		</if>
		order by num desc
	</select>
<!-- (34)id="searchIdCount"인 쿼리 작성(동일한 이름의 id의 갯수 출력해주는 쿼리) -->	
	<select id="searchIdCount" parameterType="String"
	resultType="int">
		select count(*)
		from memberdb
		where myid=#{myid}
	</select>
<!-- (42)MemberMapper.xml에 id="deleteMember"작성
	입력받은 num에 대하여 해당 튜플을 삭제해줌 -->	
	<delete id="deleteMember" parameterType="int">
		delete from memberdb
		where num=#{num}
	</delete>
<!-- (47)MemberMapper에 id="loginCheck" 에서 입력한 아이디와 비번이 맞으면 
맞는 갯수 1을 반환하는 sql 쿼리 생성 -->	
	<select id="loginCheck" parameterType="Map" 
	resultType="int">
			select count(*)
   			from memberdb
   			where myid=#{myid} and pass=#{pass}
	</select>
<!-- (49)MemberMapper에 id="selectDataById" 에서 입력한 id과 일치하는id가 포함된 튜플을 출력해 주는 쿼리 작성
		id="selectDataByNum"에서 입력한num과 일치하는 num이 포함된 튜플을 출력해 주는 쿼리 작성 -->	
	<select id="selectDataById" parameterType="String" 
	resultType="MemberDto">
			select *
			from memberdb
			where myid=#{myid}
	</select>
	<select id="selectDataByNum" parameterType="int" 
	resultType="MemberDto">
			select *
			from memberdb
			where num=#{num}
	</select>
<!-- (52)MemberMapper에 id="updatePhotoByNum"에서 num이 일치하는 곳에 photo 넣기 -->	
	<update id="updatePhotoByNum" parameterType="Map">
			update memberdb
			set photo=#{photo}
			where num=#{num}
	</update>
<!-- (53)MemberMapper에 id="updatePhotoById"에서 myid가 일치하는 곳에 photo넣기 -->	
	<update id="updatePhotoById" parameterType="Map">
			update memberdb
			set photo=#{photo}
			where myid=#{myid}
	</update>
</mapper>	







	